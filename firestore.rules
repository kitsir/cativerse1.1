rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function signedIn() { return request.auth != null; }

    // helper: สมาชิกห้อง (รองรับทั้ง users และ userIds)
    function isInRoom(roomId) {
      let room = get(/databases/$(database)/documents/rooms/$(roomId)).data;
      return (
        (room.userIds != null && request.auth.uid in room.userIds) ||
        (room.users   != null && request.auth.uid in room.users)
      );
    }

    // users
    match /users/{uid} {
      allow read: if signedIn();
      allow create, update: if signedIn() && request.auth.uid == uid;
      allow delete: if false;
    }

    // rooms
    match /rooms/{roomId} {
      allow create: if false; // ให้ Cloud Function สร้างเท่านั้น
      // ✅ เช็กสมาชิกด้วย 'in' และกันกรณีฟิลด์หาย
      allow read, update: if signedIn() && (
        (resource.data.userIds != null && request.auth.uid in resource.data.userIds) ||
        (resource.data.users   != null && request.auth.uid in resource.data.users)
      );

      match /messages/{msgId} {
        allow read, create: if signedIn() && isInRoom(roomId);
        allow update, delete: if false;
      }
    }

    // matches
    match /matches/{likeId} {
      allow read: if signedIn();
      allow create: if signedIn()
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.matched == false;
      allow update, delete: if false;
    }

    // cats + subs
    match /cats/{catId} {
      allow read: if true;
      allow create, update: if signedIn()
        && request.auth.uid == request.resource.data.ownerId;
      allow delete: if false;

      match /{sub=**} {
        allow read: if signedIn();
        allow create: if signedIn()
          && request.auth.uid == get(/databases/$(database)/documents/cats/$(catId)).data.ownerId;
        allow update, delete: if false;
      }
    }
  }
}
